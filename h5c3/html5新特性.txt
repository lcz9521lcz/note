HTML5的十大新特性
	(1)语义标签
		语义化标签使得页面的内容结构化，见名知义
		<hrader></header>	定义了文档的头部区域
		<footer></footer>	定义了文档的尾部区域
		<nav></nav>		定义文档的导航
		<section></section>	定义文档中的节（section、区段）
		<article></article>		定义页面独立的内容区域
		<aside></aside>		定义页面的侧边栏内容
		<detailes></detailes>	用于描述文档或文档某个部分的细节
		<summary></summary>	标签包含 details 元素的标题
		<dialog></dialog>		定义对话框，比如提示框

	(2)增强型表单
		HTML5 拥有多个新的表单 Input 输入类型。这些新特性提供了更好的输入控制和验证。
		color		主要用于选取颜色
		date		从一个日期选择器选择一个日期
		datetime		选择一个日期（UTC 时间）
		email		包含 e-mail 地址的输入域
		number		数值的输入域
		range		一定范围内数字值的输入域
		search		用于搜索域
		tel		定义输入电话号码字段
		url		URL 地址的输入域
		HTML5 也新增以下表单元素
		<datalist>    	<keygen>	<output>

	(3)视频和音频
		HTML5 提供了播放音频文件的标准，即使用 <audio> 元素
		control 属性供添加播放、暂停和音量控件。
		在<audio> 与 </audio> 之间你需要插入浏览器不支持的<audio>元素的提示文本 。
		<audio> 元素允许使用多个 <source> 元素. <source> 元素可以链接不同的音频文件，浏览器将使用第一个支持的音频文件
		目前, <audio>元素支持三种音频格式文件: MP3, Wav, 和 Ogg

	(4)Canvas绘图
		标签只是图形容器，必须使用脚本来绘制图形。
		1.创建一个画布，一个画布在网页中是一个矩形框，通过 <canvas> 元素来绘制。默认情况下 元素没有边框和内容。
		标签通常需要指定一个id属性 (脚本中经常引用), width 和 height 属性定义的画布的大小，使用 style 属性来添加边框。你可以在HTML页面中使用多个 <canvas> 元素
		2.使用Javascript来绘制图像，canvas 元素本身是没有绘图能力的。所有的绘制工作必须在 JavaScript 内部完成

	(5)SVG绘图
	(6)地理定位
	(7)拖放API
		拖放是一种常见的特性，即抓取对象以后拖到另一个位置。在 HTML5 中，拖放是标准的一部分，任何元素都能够拖放。
		拖放的过程分为源对象和目标对象。源对象是指你即将拖动元素，而目标对象则是指拖动之后要放置的目标位置。
		拖放的源对象(可能发生移动的)可以触发的事件――3个：
			dragstart：拖动开始
			drag：拖动中
			dragend：拖动结束
			整个拖动过程的组成： dragstart*1 + drag*n + dragend*1
		拖放的目标对象(不会发生移动)可以触发的事件――4个：
			dragenter：拖动着进入
			dragover：拖动着悬停
			dragleave：拖动着离开
			drop：释放
			整个拖动过程的组成1： dragenter*1 + dragover*n + dragleave*1
			整个拖动过程的组成2： dragenter*1 + dragover*n + drop*1

	(8)Web Worker
		当在 HTML 页面中执行脚本时，页面的状态是不可响应的，直到脚本已完成。
		web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。您可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。
	
	(9)Web Storage
		使用HTML5可以在本地存储用户的浏览数据。早些时候,本地存储使用的是cookies。但是Web 存储需要更加的安全与快速. 这些数据不会被保存在服务器上，但是这些数据只用于用户请求网站数据上.它也可以存储大量的数据，而不影响网站的性能。数据以 键/值 对存在, web网页的数据只允许该网页访问使用。
		客户端存储数据的两个对象为：
			localStorage - 没有时间限制的数据存储
			sessionStorage - 针对一个 session 的数据存储, 当用户关闭浏览器窗口后，数据会被删除。
			在使用 web 存储前,应检查浏览器是否支持 localStorage 和sessionStorage
		不管是 localStorage，还是 sessionStorage，可使用的API都相同，常用的有如下几个（以localStorage为例）：
			保存数据：localStorage.setItem(key,value);
			读取数据：localStorage.getItem(key);
			删除单个数据：localStorage.removeItem(key);
			删除所有数据：localStorage.clear();
			得到某个索引的key：localStorage.key(index);

	(10)WebSocket
		WebSocket是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。在WebSocket API中，浏览器和服务器只需要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。浏览器通过 JavaScript 向服务器发出建立 WebSocket 连接的请求，连接建立以后，客户端和服务器端就可以通过 TCP 连接直接交换数据。当你获取 Web Socket 连接后，你可以通过 send() 方法来向服务器发送数据，并通过 onmessage 事件来接收服务器返回的数据。